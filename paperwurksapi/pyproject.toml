[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "paperwurks-backend"
version = "1.0.0"
description = "Property due diligence and document management platform"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Paperwurks Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://paperwurks.com"
Repository = "https://github.com/paperwurks/backend"

# =============================================================================
# Tooling Configuration
# =============================================================================

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "*/venv/*", "*/.venv/*"]
known_django = "django"
known_first_party = ["apps", "config", "core", "tasks"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "*.tests.*"
ignore_errors = true

[tool.pytest.ini_options]
# CORRECTED: Must point to the specific test settings module
DJANGO_SETTINGS_MODULE = "apps.config.settings.test"

python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["apps", "tests"]

# Consolidated addopts from pytest.ini [cite: 4]
addopts = "-v --tb=short --strict-markers --cov-report=term-missing --cov-report=html --cov-report=xml --reuse-db --nomigrations"

# Additional options from pytest.ini [cite: 4]
python_classes = "Test*"
python_functions = "test_*"
django_find_project = false
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
]

# Markers from pytest.ini [cite: 4]
markers = [
    "slow: marks tests as slow (deselect with 'not slow')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "smoke: marks tests as smoke tests for quick validation",
    "api: marks tests as API tests",
    "celery: marks tests that require Celery",
]

# Environment variables from pytest.ini [cite: 4]
env = [
    "ENVIRONMENT=test",
    "DEBUG=False",
    "SECRET_KEY=test-secret-key",
    "CELERY_TASK_ALWAYS_EAGER=True",
]

[tool.coverage.run]
# Consolidated source from pyproject.toml [cite: 1] and coveragerc [cite: 2]
source = ["apps", "config", "core", "tasks"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/virtualenv/*",
    "*/site-packages/*",
    "manage.py",
    "*/asgi.py",
    "*/wsgi.py",
    "*.pyc",
    "*.pyo",
]

[tool.coverage.report]
# Consolidated exclude_lines from pyproject.toml [cite: 1] and coveragerc [cite: 2]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
    "@abstractmethod",
    "pass",
]
precision = 2
show_missing = true
directory = "htmlcov"

[tool.flake8]
# Consolidated from setup.cfg and external flake8 file [cite: 5]
max-line-length = 100
max-complexity = 10
exclude = [
    ".git",
    "__pycache__",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/virtualenv/*",
    "*/env/*",
    ".tox",
    "build",
    "dist",
    "*.egg-info",
]
# Unified ignore list [cite: 5]
ignore = [
    "E203",  # whitespace before ':' (for black compatibility)
    "E226",  # missing whitespace around arithmetic operator
    "E266",  # too many leading '#' for block comment
    "E302",  # expected 2 blank lines after class/function definition
    "E41",   # continuation line over-indented
    "E501",  # line too long (handled by max-line-length)
    "E702",  # multiple statements on one line
    "E731",  # do not assign a lambda expression, use a def
    "W503",  # line break before binary operator
    "F401",  # imported but unused (left here for manual check, though isort helps)
]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "C",    # mccabe complexity
    "B",    # bugbear
]
per-file-ignores = [
    "__init__.py:F401",
    "config/settings.py:E501",
]